/**
 * Wake Lock Manager
 * –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
 */
class WakeLockManager {
  constructor() {
    this.wakeLock = null;
    this.isSupported = 'wakeLock' in navigator;
    this.isActive = false;
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É
    document.addEventListener('visibilitychange', () => {
      if (document.visibilityState === 'visible' && this.isActive) {
        this.requestWakeLock();
      }
    });
    
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ—Ç–µ—Ä—é –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö
    window.addEventListener('focus', () => {
      if (this.isActive && !this.wakeLock) {
        this.requestWakeLock();
      }
    });
  }

  /**
   * –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–Ω–∞ —ç–∫—Ä–∞–Ω–∞
   */
  async requestWakeLock() {
    try {
      if (this.isSupported) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º Screen Wake Lock API
        this.wakeLock = await navigator.wakeLock.request('screen');
        console.log('üîí Wake Lock –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω (Screen Wake Lock API)');
        
        this.wakeLock.addEventListener('release', () => {
          console.log('üîì Wake Lock –æ—Ç–∫–ª—é—á–µ–Ω');
          this.wakeLock = null;
        });
        
        this.isActive = true;
        return true;
      } else {
        // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤, –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏—Ö Wake Lock API
        this.activateFallbackWakeLock();
        return true;
      }
    } catch (err) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å Wake Lock:', err);
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –º–µ—Ç–æ–¥—ã
      this.activateFallbackWakeLock();
      return false;
    }
  }

  /**
   * –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
   */
  activateFallbackWakeLock() {
    console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–Ω–∞');
    
    // –ú–µ—Ç–æ–¥ 1: –ù–µ–≤–∏–¥–∏–º–æ–µ –≤–∏–¥–µ–æ
    this.createInvisibleVideo();
    
    // –ú–µ—Ç–æ–¥ 2: –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ NoSleep –∑–∞–ø—Ä–æ—Å—ã
    this.startNoSleepInterval();
    
    this.isActive = true;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –Ω–µ–≤–∏–¥–∏–º–æ–µ –≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–Ω–∞
   */
  createInvisibleVideo() {
    // –°–æ–∑–¥–∞–µ–º –Ω–µ–≤–∏–¥–∏–º–æ–µ –≤–∏–¥–µ–æ
    const video = document.createElement('video');
    video.setAttribute('muted', '');
    video.setAttribute('playsinline', '');
    video.setAttribute('loop', '');
    video.style.position = 'fixed';
    video.style.top = '-1px';
    video.style.left = '-1px';
    video.style.width = '1px';
    video.style.height = '1px';
    video.style.opacity = '0';
    video.style.pointerEvents = 'none';
    
    // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–µ –≤–∏–¥–µ–æ –∏–∑ canvas
    const canvas = document.createElement('canvas');
    canvas.width = 1;
    canvas.height = 1;
    const ctx = canvas.getContext('2d');
    ctx.fillRect(0, 0, 1, 1);
    
    canvas.toBlob((blob) => {
      const videoURL = URL.createObjectURL(blob);
      video.src = videoURL;
      video.play().catch(() => {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
      });
    });
    
    document.body.appendChild(video);
    this.fallbackVideo = video;
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–Ω–∞
   */
  startNoSleepInterval() {
    // –ö–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥ –¥–µ–ª–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    this.noSleepInterval = setInterval(() => {
      // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é DOM –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
      const dummy = document.createElement('div');
      dummy.style.position = 'absolute';
      dummy.style.top = '-1px';
      dummy.style.left = '-1px';
      dummy.style.width = '1px';
      dummy.style.height = '1px';
      dummy.style.opacity = '0';
      document.body.appendChild(dummy);
      
      // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥—É
      setTimeout(() => {
        if (dummy.parentNode) {
          dummy.parentNode.removeChild(dummy);
        }
      }, 1);
      
      // –¢–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏–Ω–≥ —Å–∞–º–æ–º—É —Å–µ–±–µ
      fetch(window.location.href, { 
        method: 'HEAD',
        cache: 'no-cache'
      }).catch(() => {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏
      });
    }, 15000);
  }

  /**
   * –û—Ç–∫–ª—é—á–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–Ω–∞
   */
  async releaseWakeLock() {
    this.isActive = false;
    
    if (this.wakeLock) {
      await this.wakeLock.release();
      this.wakeLock = null;
    }
    
    // –û—á–∏—â–∞–µ–º fallback –º–µ—Ç–æ–¥—ã
    if (this.noSleepInterval) {
      clearInterval(this.noSleepInterval);
      this.noSleepInterval = null;
    }
    
    if (this.fallbackVideo) {
      this.fallbackVideo.pause();
      if (this.fallbackVideo.parentNode) {
        this.fallbackVideo.parentNode.removeChild(this.fallbackVideo);
      }
      this.fallbackVideo = null;
    }
    
    console.log('üîì Wake Lock –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–µ–Ω');
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
   */
  getStatus() {
    return {
      isSupported: this.isSupported,
      isActive: this.isActive,
      hasNativeWakeLock: !!this.wakeLock,
      method: this.wakeLock ? 'Screen Wake Lock API' : 'Fallback methods'
    };
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const wakeLockManager = new WakeLockManager();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–æ–¥—É–ª—è—Ö
export default wakeLockManager;

// –¢–∞–∫–∂–µ –¥–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
window.wakeLockManager = wakeLockManager; 