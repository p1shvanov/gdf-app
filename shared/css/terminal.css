/* Terminal Container */
.console-container {
  width: 100%;
  max-width: 90%;
  height: 60vh;
  min-height: 300px;
  color: var(--color-white);
  font-size: 1.2rem;
  font-family: var(--font-family-monospace);
  text-align: left;
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  background-color: var(--color-terminal-bg);
  border-radius: 8px;
  overflow: hidden;
  position: relative;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
}

/* Terminal Header */
.terminal-header {
  background-color: var(--color-terminal-header-bg);
  padding: 0.5rem 1rem;
  border-bottom: 1px solid var(--color-terminal-border);
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-shrink: 0;
}

.terminal-buttons {
  display: flex;
  gap: 0.5rem;
}

.terminal-button {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  border: none;
}

.terminal-button.close {
  background-color: var(--color-terminal-close);
}

.terminal-button.minimize {
  background-color: var(--color-terminal-minimize);
}

.terminal-button.maximize {
  background-color: var(--color-terminal-maximize);
}

.terminal-title {
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.9rem;
  margin-left: 0.5rem;
}

/* Terminal Content */
.terminal-content {
  padding: 1rem;
  flex: 1;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  position: relative;
}

.terminal-history {
  flex: 1;
  overflow-y: auto;
  margin-bottom: 1rem;
}

.terminal-input {
  position: sticky;
  bottom: 0;
  background-color: var(--color-terminal-bg);
  padding-top: 0.5rem;
  border-top: 1px solid var(--color-terminal-border);
  pointer-events: none;
}

.terminal-line {
  margin: 0;
  padding: 0;
  line-height: 1.5;
  white-space: pre;
}

.terminal-line.typing {
  position: relative;
}

.terminal-line.processing {
  color: var(--color-terminal-minimize);
}

.terminal-line.processing::after {
  content: '...';
  animation: processing 1.5s infinite;
}

@keyframes processing {
  0% { content: '.'; }
  33% { content: '..'; }
  66% { content: '...'; }
  100% { content: '.'; }
}

/* Terminal Text Elements */
.terminal-prompt {
  color: var(--color-terminal-prompt);
  margin-right: 0.5rem;
}

.terminal-username {
  color: var(--color-terminal-username);
  margin-right: 0.5rem;
}

.terminal-command {
  color: var(--color-terminal-command);
  font-weight: 500;
}

.terminal-output {
  color: var(--color-terminal-output);
  margin-left: 1rem;
  padding-left: 1rem;
  border-left: 2px solid rgba(79, 223, 180, 0.3);
  line-height: 1.6;
}

.terminal-output br {
  margin-bottom: 0.3rem;
}

.terminal-output .checkmark {
  color: var(--color-terminal-prompt);
  margin-left: 0.5rem;
}

.terminal-error {
  color: var(--color-terminal-error);
  margin-left: 1rem;
  padding-left: 1rem;
  border-left: 2px solid rgba(255, 95, 86, 0.3);
  line-height: 1.6;
}

.terminal-generating {
  color: var(--color-terminal-generating);
}

.terminal-generating::after {
  content: '|';
  animation: blink 1s step-end infinite;
}

.cursor {
  display: inline-block;
  width: 0.5em;
  height: 1em;
  background-color: var(--color-white);
  animation: blink 1s step-end infinite;
  margin-left: 2px;
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

/* Character limit indicator */
.terminal-char-limit {
  position: absolute;
  top: -1.5rem;
  right: 0;
  font-size: 0.8rem;
  color: rgba(255, 255, 255, 0.5);
  font-family: inherit;
}

.terminal-char-limit.warning {
  color: var(--color-terminal-minimize);
}

.terminal-char-limit.danger {
  color: var(--color-terminal-error);
  animation: pulse 1.5s ease-in-out infinite;
}

@keyframes pulse {
  0% { opacity: 1; }
  50% { opacity: 0.6; }
  100% { opacity: 1; }
}

/* Processing steps animation */
.terminal-processing-step {
  color: var(--color-terminal-minimize);
  margin-left: 1rem;
  padding-left: 1rem;
  border-left: 2px solid rgba(255, 193, 7, 0.3);
  line-height: 1.6;
  opacity: 0;
  animation: step-appear 0.5s ease-in-out forwards;
}

.terminal-processing-step::before {
  content: 'âš¡ ';
  color: var(--color-terminal-prompt);
}

.terminal-processing-step.active::after {
  content: '...';
  animation: processing-dots 1.5s infinite;
}

@keyframes step-appear {
  from { 
    opacity: 0; 
    transform: translateX(-10px);
  }
  to { 
    opacity: 1; 
    transform: translateX(0);
  }
}

@keyframes step-fade-out {
  from { 
    opacity: 1; 
    transform: translateX(0);
    height: auto;
    margin-bottom: 0;
  }
  to { 
    opacity: 0; 
    transform: translateX(-10px);
    height: 0;
    margin-bottom: 0;
  }
}

.terminal-processing-step.fade-out {
  animation: step-fade-out 0.6s ease-in-out forwards;
}

@keyframes processing-dots {
  0% { content: '.'; }
  33% { content: '..'; }
  66% { content: '...'; }
  100% { content: '.'; }
} 